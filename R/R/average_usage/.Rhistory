db <- db[order(db$Time),]
print(f_name)
return(db)
}
# normlise data in percentage format
norm <- function(col_val){
db_sum = sum(col_val)
val = col_val / db_sum * 100
#format(round(val, 2))
}
# Plot graph
draw_graph <- function(){
db_tran <- reshapeData(db_all)
pltbase <- ggplot(db_tran, aes(db_tran[,index_col],value, col=variable, group = variable)) +
geom_line(colour=chart_color) +
#geom_point(colour=chart_color) +
labs(list(title = "Average Daily Usage", x = "Time", y = "Proportion of Usage in Each Hour (%)"))+
theme(axis.text.x = element_text(angle=90, vjust=0.5))
#shown cluster curve if true
if(add_cluster_Curve){
cluster_db = reshapeData(Main_Cluster(db_all))
# add cluster curves
db = cluster_db
pltbase + geom_line(data=db, aes(db[,index_col],value, col=variable, group = variable), size = kMean_lineSize)
}else{
pltbase
}
}
#reshape data
reshapeData <- function(data){
db_tran <- melt(data, id.vars=index_col)
}
#extract file name and rename it
rename_file <- function(f_name){
preName = "nmi"
joinPart = "_"
nmi = substr(f_name, 1, 10)
new_name = paste(preName, nmi, sep = joinPart)
return(new_name)
}
#Cluster_centers
kCluster <-function(data){
cl <- kmeans(data, kMean_lines)
return(cl$centers)
}
strip_data <- function(data){
return(as.numeric(data[1,]))
}
#Cluster_transpose
#Main Cluster
Main_Cluster <- function(data){
#parse data
db_temp = data[,2:length(data)]
#transpose data and get time column
t_db = t(db_temp)
Time = data[,index_col]
#get cluster points
clt_data_t = kCluster(t_db)
clt_data = data.frame(Time, t(clt_data_t))
return(clt_data)
}
main()
draw_graph()
#Main_Cluster(db_all)
library(ggplot2)
library(reshape2)
library(scales)
library(cluster)
#path = "C:/Users/rfzheng/Desktop/R/R/average_usage"
path = "C:/Users/Ricky/Desktop/Eutility_Dev/R/R/average_usage"
target_col = "kWh"
index_col = "Time"
chart_color = "#18334e"
kMean_lines = 2
kMean_lineSize = 2
setwd(path)
#maximise printing output result
options(max.print=1000000)
# True for show cluster Curve, otherwise hide
add_cluster_Curve = TRUE
#loop through all csv files in the given path
csv_files = list.files(pattern="*.csv")
size_temp = length(csv_files)
main <- function(){
if (size_temp >0){
# loop throught all csv files
for(i in 1:size_temp){
# main
result <- parse_file(i, csv_files[i])
next
}
return(result)
}
}
# parse data
parse_file <- function(index, f_name){
db <- fetch_data(f_name)
if(index == 1){
# set up for first time
db_all <<- db
}
#normalise dataset
db_all[[rename_file(f_name)]] <<- norm(db[,rename_file(f_name)])
return(db_all)
}
fetch_data <-function(f_name){
db_raw = read.csv(f_name)
dic_db = list(db_raw$Time)
index_Time <- grep(target_col, colnames(db_raw))
#fetch target column
db <- aggregate(db_raw[, index_Time], dic_db, mean)
#rename fetched database
colnames(db)[1] <- index_col
colnames(db)[2] <- rename_file(f_name)
#sort data by on index
db <- db[order(db$Time),]
print(f_name)
return(db)
}
# normlise data in percentage format
norm <- function(col_val){
db_sum = sum(col_val)
val = col_val / db_sum * 100
#format(round(val, 2))
}
# Plot graph
draw_graph <- function(){
db_tran <- reshapeData(db_all)
pltbase <- ggplot(db_tran, aes(db_tran[,index_col],value, col=variable, group = variable)) +
geom_line(colour=chart_color) +
#geom_point(colour=chart_color) +
labs(list(title = "Average Daily Usage", x = "Time", y = "Proportion of Usage in Each Hour (%)"))+
theme(axis.text.x = element_text(angle=90, vjust=0.5))
#shown cluster curve if true
if(add_cluster_Curve){
cluster_db = reshapeData(Main_Cluster(db_all))
# add cluster curves
db = cluster_db
pltbase + geom_line(data=db, aes(db[,index_col],value, col=variable, group = variable), size = kMean_lineSize)
}else{
pltbase
}
}
#reshape data
reshapeData <- function(data){
db_tran <- melt(data, id.vars=index_col)
}
#extract file name and rename it
rename_file <- function(f_name){
preName = "nmi"
joinPart = "_"
nmi = substr(f_name, 1, 10)
new_name = paste(preName, nmi, sep = joinPart)
return(new_name)
}
#Cluster_centers
kCluster <-function(data){
cl <- kmeans(data, kMean_lines)
return(cl$centers)
}
strip_data <- function(data){
return(as.numeric(data[1,]))
}
#Cluster_transpose
#Main Cluster
Main_Cluster <- function(data){
#parse data
db_temp = data[,2:length(data)]
#transpose data and get time column
t_db = t(db_temp)
Time = data[,index_col]
#get cluster points
clt_data_t = kCluster(t_db)
clt_data = data.frame(Time, t(clt_data_t))
return(clt_data)
}
main()
draw_graph()
#Main_Cluster(db_all)
library(ggplot2)
library(reshape2)
library(scales)
library(cluster)
#path = "C:/Users/rfzheng/Desktop/R/R/average_usage"
path = "C:/Users/Ricky/Desktop/Eutility_Dev/R/R/average_usage"
target_col = "kWh"
index_col = "Time"
chart_color = "#18334e"
kMean_lines = 2
kMean_lineSize = 2
setwd(path)
#maximise printing output result
options(max.print=1000000)
# True for show cluster Curve, otherwise hide
add_cluster_Curve = TRUE
#loop through all csv files in the given path
csv_files = list.files(pattern="*.csv")
size_temp = length(csv_files)
main <- function(){
if (size_temp >0){
# loop throught all csv files
for(i in 1:size_temp){
# main
result <- parse_file(i, csv_files[i])
next
}
return(result)
}
}
# parse data
parse_file <- function(index, f_name){
db <- fetch_data(f_name)
if(index == 1){
# set up for first time
db_all <<- db
}
#normalise dataset
db_all[[rename_file(f_name)]] <<- norm(db[,rename_file(f_name)])
return(db_all)
}
fetch_data <-function(f_name){
db_raw = read.csv(f_name)
dic_db = list(db_raw$Time)
index_Time <- grep(target_col, colnames(db_raw))
#fetch target column
db <- aggregate(db_raw[, index_Time], dic_db, mean)
#rename fetched database
colnames(db)[1] <- index_col
colnames(db)[2] <- rename_file(f_name)
#sort data by on index
db <- db[order(db$Time),]
print(f_name)
return(db)
}
# normlise data in percentage format
norm <- function(col_val){
db_sum = sum(col_val)
val = col_val / db_sum * 100
#format(round(val, 2))
}
# Plot graph
draw_graph <- function(){
db_tran <- reshapeData(db_all)
pltbase <- ggplot(db_tran, aes(db_tran[,index_col],value, col=variable, group = variable)) +
geom_line(colour=chart_color) +
#geom_point(colour=chart_color) +
labs(list(title = "Average Daily Usage", x = "Time", y = "Proportion of Usage in Each Hour (%)"))+
theme(axis.text.x = element_text(angle=90, vjust=0.5))
#shown cluster curve if true
if(add_cluster_Curve){
cluster_db = reshapeData(Main_Cluster(db_all))
# add cluster curves
db = cluster_db
pltbase + geom_line(data=db, aes(db[,index_col],value, col=variable, group = variable), size = kMean_lineSize)
}else{
pltbase
}
}
#reshape data
reshapeData <- function(data){
db_tran <- melt(data, id.vars=index_col)
}
#extract file name and rename it
rename_file <- function(f_name){
preName = "nmi"
joinPart = "_"
nmi = substr(f_name, 1, 10)
new_name = paste(preName, nmi, sep = joinPart)
return(new_name)
}
#Cluster_centers
kCluster <-function(data){
cl <- kmeans(data, kMean_lines)
return(cl$centers)
}
#Main Cluster
Main_Cluster <- function(data){
#parse data
db_temp = data[,2:length(data)]
#transpose data and get time column
t_db = t(db_temp)
Time = data[,index_col]
#get cluster points
clt_data_t = kCluster(t_db)
clt_data = data.frame(Time, t(clt_data_t))
return(clt_data)
}
main()
draw_graph()
#Main_Cluster(db_all)
library(ggplot2)
library(reshape2)
library(scales)
library(cluster)
#path = "C:/Users/rfzheng/Desktop/R/R/average_usage"
path = "C:/Users/Ricky/Desktop/Eutility_Dev/R/R/average_usage"
target_col = "kWh"
index_col = "Time"
chart_color = "#18334e"
kMean_lines = 3
kMean_lineSize = 2
setwd(path)
#maximise printing output result
options(max.print=1000000)
# True for show cluster Curve, otherwise hide
add_cluster_Curve = TRUE
#loop through all csv files in the given path
csv_files = list.files(pattern="*.csv")
size_temp = length(csv_files)
main <- function(){
if (size_temp >0){
# loop throught all csv files
for(i in 1:size_temp){
# main
result <- parse_file(i, csv_files[i])
next
}
return(result)
}
}
# parse data
parse_file <- function(index, f_name){
db <- fetch_data(f_name)
if(index == 1){
# set up for first time
db_all <<- db
}
#normalise dataset
db_all[[rename_file(f_name)]] <<- norm(db[,rename_file(f_name)])
return(db_all)
}
fetch_data <-function(f_name){
db_raw = read.csv(f_name)
dic_db = list(db_raw$Time)
index_Time <- grep(target_col, colnames(db_raw))
#fetch target column
db <- aggregate(db_raw[, index_Time], dic_db, mean)
#rename fetched database
colnames(db)[1] <- index_col
colnames(db)[2] <- rename_file(f_name)
#sort data by on index
db <- db[order(db$Time),]
print(f_name)
return(db)
}
# normlise data in percentage format
norm <- function(col_val){
db_sum = sum(col_val)
val = col_val / db_sum * 100
#format(round(val, 2))
}
# Plot graph
draw_graph <- function(){
db_tran <- reshapeData(db_all)
pltbase <- ggplot(db_tran, aes(db_tran[,index_col],value, col=variable, group = variable)) +
geom_line(colour=chart_color) +
#geom_point(colour=chart_color) +
labs(list(title = "Average Daily Usage", x = "Time", y = "Proportion of Usage in Each Hour (%)"))+
theme(axis.text.x = element_text(angle=90, vjust=0.5))
#shown cluster curve if true
if(add_cluster_Curve){
cluster_db = reshapeData(Main_Cluster(db_all))
# add cluster curves
db = cluster_db
pltbase + geom_line(data=db, aes(db[,index_col],value, col=variable, group = variable), size = kMean_lineSize)
}else{
pltbase
}
}
#reshape data
reshapeData <- function(data){
db_tran <- melt(data, id.vars=index_col)
}
#extract file name and rename it
rename_file <- function(f_name){
preName = "nmi"
joinPart = "_"
nmi = substr(f_name, 1, 10)
new_name = paste(preName, nmi, sep = joinPart)
return(new_name)
}
#Cluster_centers
kCluster <-function(data){
cl <- kmeans(data, kMean_lines)
return(cl$centers)
}
#Main Cluster
Main_Cluster <- function(data){
#parse data
db_temp = data[,2:length(data)]
#transpose data and get time column
t_db = t(db_temp)
Time = data[,index_col]
#get cluster points
clt_data_t = kCluster(t_db)
clt_data = data.frame(Time, t(clt_data_t))
return(clt_data)
}
main()
draw_graph()
#Main_Cluster(db_all)
library(ggplot2)
library(reshape2)
library(scales)
library(cluster)
#path = "C:/Users/rfzheng/Desktop/R/R/average_usage"
path = "C:/Users/Ricky/Desktop/Eutility_Dev/R/R/average_usage"
target_col = "kWh"
index_col = "Time"
chart_color = "#18334e"
kMean_lines = 1
kMean_lineSize = 2
setwd(path)
#maximise printing output result
options(max.print=1000000)
# True for show cluster Curve, otherwise hide
add_cluster_Curve = TRUE
#loop through all csv files in the given path
csv_files = list.files(pattern="*.csv")
size_temp = length(csv_files)
main <- function(){
if (size_temp >0){
# loop throught all csv files
for(i in 1:size_temp){
# main
result <- parse_file(i, csv_files[i])
next
}
return(result)
}
}
# parse data
parse_file <- function(index, f_name){
db <- fetch_data(f_name)
if(index == 1){
# set up for first time
db_all <<- db
}
#normalise dataset
db_all[[rename_file(f_name)]] <<- norm(db[,rename_file(f_name)])
return(db_all)
}
fetch_data <-function(f_name){
db_raw = read.csv(f_name)
dic_db = list(db_raw$Time)
index_Time <- grep(target_col, colnames(db_raw))
#fetch target column
db <- aggregate(db_raw[, index_Time], dic_db, mean)
#rename fetched database
colnames(db)[1] <- index_col
colnames(db)[2] <- rename_file(f_name)
#sort data by on index
db <- db[order(db$Time),]
print(f_name)
return(db)
}
# normlise data in percentage format
norm <- function(col_val){
db_sum = sum(col_val)
val = col_val / db_sum * 100
#format(round(val, 2))
}
# Plot graph
draw_graph <- function(){
db_tran <- reshapeData(db_all)
pltbase <- ggplot(db_tran, aes(db_tran[,index_col],value, col=variable, group = variable)) +
geom_line(colour=chart_color) +
#geom_point(colour=chart_color) +
labs(list(title = "Average Daily Usage", x = "Time", y = "Proportion of Usage in Each Hour (%)"))+
theme(axis.text.x = element_text(angle=90, vjust=0.5))
#shown cluster curve if true
if(add_cluster_Curve){
cluster_db = reshapeData(Main_Cluster(db_all))
# add cluster curves
db = cluster_db
pltbase + geom_line(data=db, aes(db[,index_col],value, col=variable, group = variable), size = kMean_lineSize)
}else{
pltbase
}
}
#reshape data
reshapeData <- function(data){
db_tran <- melt(data, id.vars=index_col)
}
#extract file name and rename it
rename_file <- function(f_name){
preName = "nmi"
joinPart = "_"
nmi = substr(f_name, 1, 10)
new_name = paste(preName, nmi, sep = joinPart)
return(new_name)
}
#Cluster_centers
kCluster <-function(data){
cl <- kmeans(data, kMean_lines)
return(cl$centers)
}
#Main Cluster
Main_Cluster <- function(data){
#parse data
db_temp = data[,2:length(data)]
#transpose data and get time column
t_db = t(db_temp)
Time = data[,index_col]
#get cluster points
clt_data_t = kCluster(t_db)
clt_data = data.frame(Time, t(clt_data_t))
return(clt_data)
}
main()
draw_graph()
#Main_Cluster(db_all)
